{"version":3,"sources":["images/map-marker.svg","images/logo.svg","pages/Lading.tsx","utils/mapIcon.ts","services/api.ts","pages/OrphanagesMap.tsx","components/Sidebar.tsx","pages/Orphanage.tsx","pages/CreateOrphanage.tsx","routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Landing","id","className","src","logoImg","alt","to","size","color","mapIcon","Leaflet","icon","iconUrl","mapMarkerImg","iconSize","iconAnchor","popupAnchor","api","axios","create","baseURL","OrpahanagesMap","useState","userLatitude","setUserLatitude","userLongitude","setUserLongitude","orphanages","setOrphanages","useEffect","get","then","res","data","catch","err","console","error","navigator","geolocation","getCurrentPosition","location","coords","latitude","longitude","Map","center","zoom","setView","style","width","height","TileLayer","url","process","map","orphanage","Marker","position","key","Popup","closeButton","minWidth","maxWidth","name","Sidebar","goBack","useHistory","type","onClick","Orphanage","params","useParams","setOrphanage","activeImageIndex","setActiveImageIndex","images","log","image","index","about","dragging","touchZoom","zoomControl","scrollWheelZoom","doubleClickZoom","interactive","target","rel","href","instructions","opening_hours","open_on_weekends","CreateOrphanage","history","setPosition","setName","setAbout","setInstructions","setOpneningHours","setOpenOnWeekends","setImages","previewImages","setPreviewImages","onSubmit","e","preventDefault","FormData","append","String","forEach","post","alert","push","latlng","lat","lng","htmlFor","value","onChange","maxLength","multiple","files","selectedImages","Array","from","selectedImagesPreview","URL","createObjectURL","Routes","path","exact","component","OrphanagesMap","App","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","window","origin","addEventListener"],"mappings":"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","file":"static/js/main.2262954f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map-marker.658b8302.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.1653c647.svg\";","import React from 'react';\r\nimport logoImg from '../images/logo.svg';\r\nimport { FiArrowRight } from 'react-icons/fi';\r\nimport '../styles/pages/landing.css'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Landing(){\r\n    return(\r\n        <div id=\"page-landing\">\r\n        <div className=\"content-wrapper\">\r\n          <img src={logoImg} alt=\"Happy\" />\r\n        \r\n          <main>\r\n            <h1>Leve felicidade para o mundo</h1>\r\n            <p>Visite orfanatos e mude o dia de muitas crian√ßas;</p>\r\n          </main>\r\n  \r\n          <div className=\"location\">\r\n            <strong>Lajeado</strong>\r\n            <span>Rio Grande do Sul</span>\r\n          </div>\r\n  \r\n          <Link to=\"/app\" className=\"enter-app\">\r\n            <FiArrowRight size={26} color=\"rgba(0,0,0, 0.6)\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Landing","import Leaflet from 'leaflet';\r\nimport mapMarkerImg from '../images/map-marker.svg';\r\n\r\nconst mapIcon = Leaflet.icon({\r\n    iconUrl: mapMarkerImg,\r\n    iconSize: [58, 68],\r\n    iconAnchor: [29, 68],\r\n    popupAnchor: [0, -60]\r\n})\r\n\r\nexport default mapIcon","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3333'\r\n})\r\n\r\nexport default api;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiPlus, FiArrowRight } from 'react-icons/fi';\r\nimport { Map, Marker, TileLayer, Popup } from 'react-leaflet';\r\n\r\nimport mapMarkerImg from '../images/map-marker.svg';\r\nimport '../styles/pages/orphanages-map.css';\r\nimport mapIcon from '../utils/mapIcon';\r\nimport api from '../services/api';\r\n\r\ninterface IOrphanage {\r\n    id: number,\r\n    name: string,\r\n    latitude: number,\r\n    longitude: number\r\n}\r\n\r\nfunction OrpahanagesMap() {\r\n    const [userLatitude, setUserLatitude] = useState(-29.4506549);\r\n    const [userLongitude, setUserLongitude] = useState(-52.5848386);\r\n    const [orphanages, setOrphanages] = useState<IOrphanage[]>([]);\r\n\r\n    useEffect(() => {\r\n        api.get('orphanages').then(res => {\r\n            setOrphanages(res.data);\r\n        }).catch(err => {\r\n            console.error(err);\r\n        });\r\n\r\n        navigator.geolocation.getCurrentPosition((location) => {\r\n            setUserLatitude(location.coords.latitude);\r\n            setUserLongitude(location.coords.longitude);\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"page-map\">\r\n            <aside>\r\n                <header>\r\n                    <img src={mapMarkerImg} alt=\"Happy\" />\r\n\r\n                    <h2>Escolha um orfanato no mapa</h2>\r\n                    <p>Muitas crian√ßas est√£o esperando a sua visita :)</p>\r\n                </header>\r\n\r\n                <footer>\r\n                    <strong>Lajeado</strong>\r\n                    <span>Rio Grande do Sul</span>\r\n                </footer>\r\n            </aside>\r\n\r\n            <Map\r\n                center={[userLatitude, userLongitude]}\r\n                zoom={15}\r\n                setView={true}\r\n                style={{ width: '100%', height: '100%' }}\r\n            >\r\n                <TileLayer url={`https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/256/{z}/{x}/{y}@2x?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`} />\r\n\r\n                {orphanages.map(orphanage => {\r\n                    return (\r\n                        <Marker\r\n                            icon={mapIcon}\r\n                            position={[orphanage.latitude, orphanage.longitude]}\r\n                            key={orphanage.id}\r\n                        >\r\n                            <Popup closeButton={false} minWidth={240} maxWidth={240} className=\"map-popup\">\r\n                                {orphanage.name}\r\n                                <Link to={`/orphanages/${orphanage.id}`} >\r\n                                    <FiArrowRight size={20} color=\"#fff\" />\r\n                                </Link>\r\n                            </Popup>\r\n                        </Marker>\r\n                    )\r\n                })}\r\n            </Map>\r\n\r\n            <Link to=\"/orphanages/create\" className=\"create-orphange\">\r\n                <FiPlus size={32} color=\"#ffffff\" />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrpahanagesMap;","import React from 'react';\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { useHistory } from 'react-router-dom';\r\nimport mapMarkerImg from '../images/map-marker.svg';\r\nimport '../styles/components/sidebar.css'\r\n\r\nexport default function Sidebar() {\r\n    const { goBack } = useHistory();\r\n    \r\n    return (\r\n        <aside className=\"app-sidebar\">\r\n            <img src={mapMarkerImg} alt=\"Happy\" />\r\n\r\n            <footer>\r\n                <button type=\"button\" onClick={goBack}>\r\n                    <FiArrowLeft size={24} color=\"#FFF\" />\r\n                </button>\r\n            </footer>\r\n        </aside>\r\n    );\r\n}","import React, { useState } from \"react\";\nimport { FaWhatsapp } from \"react-icons/fa\";\nimport { FiClock, FiInfo } from \"react-icons/fi\";\nimport { Map, Marker, TileLayer } from \"react-leaflet\";\nimport '../styles/pages/orphanage.css';\nimport Sidebar from \"../components/Sidebar\";\nimport mapIcon from \"../utils/mapIcon\";\nimport { useEffect } from \"react\";\nimport api from \"../services/api\";\nimport { useParams } from 'react-router-dom';\n\ninterface IOrphanage {\n  id: number,\n  name: string,\n  latitude: number,\n  longitude: number,\n  about: string,\n  instructions: string,\n  opening_hours: string,\n  open_on_weekends: boolean,\n  images: Array<{\n    id: number,\n    url: string\n  }>\n}\n\ninterface IRouteParams {\n  id: string\n}\n\nexport default function Orphanage() {\n  const params = useParams<IRouteParams>()\n  const [orphanage, setOrphanage] = useState<IOrphanage>();\n  const [activeImageIndex, setActiveImageIndex] = useState(0);\n\n  useEffect(() => {\n    api.get(`orphanages/${params.id}`).then(res => {\n      setOrphanage(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [params.id])\n\n  if (!orphanage) {\n    return <p>Carregando...</p>\n  }\n\n  return (\n    <div id=\"page-orphanage\">\n      <Sidebar />\n\n      <main>\n        <div className=\"orphanage-details\">\n          <img src={orphanage.images[activeImageIndex].url} alt={orphanage.name} />\n          {console.log(orphanage.images)}\n          <div className=\"images\">\n            {orphanage.images.map((image, index) => {\n              return (\n                <button\n                  key={image.id}\n                  className={activeImageIndex === index ? \"active\" : \"\"}\n                  type=\"button\"\n                  onClick={() => {\n                    setActiveImageIndex(index)\n                  }}\n                >\n                  <img src={image.url} alt={orphanage.name} />\n                </button>\n              )\n            })}\n          </div>\n\n          <div className=\"orphanage-details-content\">\n            <h1>{orphanage.name}</h1>\n            <p>\n              {orphanage.about}\n            </p>\n\n            <div className=\"map-container\">\n              <Map\n                center={[orphanage.latitude, orphanage.longitude]}\n                zoom={16}\n                style={{ width: '100%', height: 280 }}\n                dragging={false}\n                touchZoom={false}\n                zoomControl={false}\n                scrollWheelZoom={false}\n                doubleClickZoom={false}\n              >\n                <TileLayer\n                  url={`https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/256/{z}/{x}/{y}@2x?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`}\n                />\n                <Marker interactive={false} icon={mapIcon} position={[orphanage.latitude, orphanage.longitude]} />\n              </Map>\n\n              <footer>\n                <a target=\"_blank\" rel=\"noopner noreferrer\" href={`https://www.google.com/maps/dir/?api=1&destination=${orphanage.latitude},${orphanage.longitude}`}>\n                  Ver rotas no Google Maps\n                </a>\n              </footer>\n            </div>\n\n            <hr />\n\n            <h2>Instru√ß√µes para visita</h2>\n            <p>\n              {orphanage.instructions}\n            </p>\n\n            <div className=\"open-details\">\n              <div className=\"hour\">\n                <FiClock size={32} color=\"#15B6D6\" />\n                Segunda √† Sexta <br />\n                {orphanage.opening_hours}\n              </div>\n              {orphanage.open_on_weekends ? (\n                <div className=\"open-on-weekends\">\n                  <FiInfo size={32} color=\"#39CC83\" />\n                Atendemos <br />\n                fim de semana\n                </div>\n              ) :\n                <div className=\"dont-open-on-weekends\">\n                  <FiInfo size={32} color=\"#FF669D\" />\n                N√£o atendemos <br />\n                fim de semana\n              </div>}\n            </div>\n\n            {/* <button type=\"button\" className=\"contact-button\">\n              <FaWhatsapp size={20} color=\"#FFF\" />\n              Entrar em contato\n            </button> */}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\nimport { Map, Marker, TileLayer } from 'react-leaflet';\nimport { LeafletMouseEvent } from 'leaflet'\nimport { FiPlus } from \"react-icons/fi\";\nimport '../styles/pages/create-orphanage.css';\nimport Sidebar from \"../components/Sidebar\";\nimport mapIcon from \"../utils/mapIcon\";\nimport api from \"../services/api\";\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function CreateOrphanage() {\n  const history = useHistory();\n\n  const [userLatitude, setUserLatitude] = useState(-29.4506549);\n  const [userLongitude, setUserLongitude] = useState(-52.5848386);\n  const [position, setPosition] = useState({ latitude: 0, longitude: 0 });\n\n  const [name, setName] = useState('');\n  const [about, setAbout] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [opening_hours, setOpneningHours] = useState('');\n  const [open_on_weekends, setOpenOnWeekends] = useState(true);\n  const [images, setImages] = useState<File[]>([]);\n  const [previewImages, setPreviewImages] = useState<string[]>([]);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((location) => {\n      setUserLatitude(location.coords.latitude);\n      setUserLongitude(location.coords.longitude);\n    });\n  }, [])\n\n  function handleMapClick(e: LeafletMouseEvent) {\n    const { lat, lng } = e.latlng;\n\n    setPosition({ latitude: lat, longitude: lng })\n  }\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault();\n\n    const { latitude, longitude } = position;\n\n    const data = new FormData();\n\n    data.append('name', name);\n    data.append('about', about);\n    data.append('latitude', String(latitude));\n    data.append('longitude', String(longitude));\n    data.append('instructions', instructions);\n    data.append('opening_hours', opening_hours);\n    data.append('open_on_weekends', String(open_on_weekends));\n\n    images.forEach(image => {\n      data.append('images', image)\n    });\n\n    api.post('orphanages', data).then(res => {\n      alert(\"Cadastro realizado com sucesso.\");\n      history.push('/app')\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  function handleSelectImages(e: ChangeEvent<HTMLInputElement>) {\n    if (!e.target.files) {\n      return;\n    }\n\n    const selectedImages = Array.from(e.target.files);\n\n    setImages(selectedImages);\n\n    const selectedImagesPreview = selectedImages.map(image => {\n      return URL.createObjectURL(image);\n    });\n\n    setPreviewImages(selectedImagesPreview);\n  }\n\n  return (\n    <div id=\"page-create-orphanage\">\n      <Sidebar />\n\n      <main>\n        <form className=\"create-orphanage-form\" onSubmit={handleSubmit}>\n          <fieldset>\n            <legend>Dados</legend>\n\n            <Map\n              center={[userLatitude, userLongitude]}\n              style={{ width: '100%', height: 280 }}\n              zoom={15}\n              onClick={handleMapClick}\n            >\n              <TileLayer\n                url={`https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/256/{z}/{x}/{y}@2x?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`}\n              />\n\n              {position.latitude !== 0 && (\n                <Marker\n                  interactive={false}\n                  icon={mapIcon}\n                  position={[position.latitude, position.longitude]} />\n              )}\n            </Map>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"name\">Nome</label>\n              <input id=\"name\" value={name} onChange={e => setName(e.target.value)} />\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"about\">Sobre <span>M√°ximo de 300 caracteres</span></label>\n              <textarea id=\"about\" maxLength={300} value={about} onChange={e => setAbout(e.target.value)} />\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"images\">Fotos</label>\n\n              <div className=\"images-container\">\n                {previewImages.map(image => {\n                  return (\n                    <img key={image} src={image} alt={name} />\n                  )\n                })}\n\n                <label htmlFor=\"image[]\" className=\"new-image\">\n                  <FiPlus size={24} color=\"#15b6d6\" />\n                </label>\n              </div>\n              <input type=\"file\" multiple onChange={handleSelectImages} id=\"image[]\" />\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <legend>Visita√ß√£o</legend>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"instructions\">Instru√ß√µes</label>\n              <textarea id=\"instructions\" value={instructions} onChange={e => setInstructions(e.target.value)} />\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"opening_hours\">Hor√°rio de funcionamento</label>\n              <input id=\"opening_hours\" value={opening_hours} onChange={e => setOpneningHours(e.target.value)} />\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"open_on_weekends\">Atende fim de semana</label>\n\n              <div className=\"button-select\">\n                <button type=\"button\" className={open_on_weekends ? \"active\" : \"\"} onClick={() => setOpenOnWeekends(true)}>Sim</button>\n                <button type=\"button\" className={open_on_weekends ? \"\" : \"active\"} onClick={() => setOpenOnWeekends(false)}>N√£o</button>\n              </div>\n            </div>\n          </fieldset>\n\n          <button className=\"confirm-button\" type=\"submit\">\n            Confirmar\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n}\n\n// return `https://a.tile.openstreetmap.org/${z}/${x}/${y}.png`;\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Landing from './pages/Lading';\r\nimport OrphanagesMap from './pages/OrphanagesMap'\r\nimport Orphanage from './pages/Orphanage'\r\nimport CreateOrphanage from './pages/CreateOrphanage'\r\n\r\nfunction Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Landing} />\r\n                <Route path=\"/app\" component={OrphanagesMap} />\r\n                <Route path=\"/orphanages/create\" component={CreateOrphanage} />\r\n                <Route path=\"/orphanages/:id\" component={Orphanage} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport Routes from './routes';\n\nimport './styles/global.css';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = false;\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}